highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Pastel1")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Pastel2")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Set1")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Set2")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Set2")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Set3")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Blues")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="Greys")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="YlGnBu")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_brewer(palette="OrRd")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#000000", "#736F6E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#736F6E" , "#000000"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
source('D:/work/git corona/run_file.R')
install.packages("selectr")
install.packages("xml2")
install.packages("rvest")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
source('~/.active-rstudio-document')
page <- read_html("https://www.care.gov.eg/default.html")
?html_nodes()
page%>% html_nodes("[class='progress-value']")
page%>% html_nodes("[class='progress-value']")%>%html_text()
c(values[3],values[2] , values[4])
values <- page%>% html_nodes("[class='progress-value']")%>%html_text()
c(values[3],values[2] , values[4])
as.numeric(c(values[3],values[2] , values[4]))
source('~/.active-rstudio-document')
get_values()
source('Scraper.R')
values <- get_values()
df <- read.csv("eg_covid.csv")
rw <- df[nrow(df),]
prev_rw <- rw
rw$Day <- format(Sys.Date(),"%m/%d/%Y")
rw$New.Cases <- values[1]
rw$Total.Cases <- as.numeric(rw$Total.Cases)+new_cases
rw$New.Deaths <- values[2]
rw$Total.Deaths <- rw$Total.Deaths + new_deaths
rw$New.Recovered <- values[3] - rw$Total.Recovered
rw$Total.Recovered <- values[3]
rw$New.Deaths...60 <- new_deaths
source('Scraper.R')
values <- get_values()
df <- read.csv("eg_covid.csv")
rw <- df[nrow(df),]
prev_rw <- rw
new_cases <- values[1]
new_deaths <- values[2]
total_recovored <- values[3]
rw$Day <- format(Sys.Date(),"%m/%d/%Y")
rw$New.Cases <- new_cases
rw$Total.Cases <- as.numeric(rw$Total.Cases)+new_cases
rw$New.Deaths <- new_deaths
rw$Total.Deaths <- rw$Total.Deaths + new_deaths
rw$New.Recovered <- total_recovored - rw$Total.Recovered
rw$Total.Recovered <- total_recovored
rw$New.Deaths...60 <- new_deaths
rw
prev_rw
source('Scraper.R')
values <- get_values()
df <- read.csv("eg_covid.csv")
rw <- df[nrow(df)-1,]
prev_rw <- rw
new_cases <- values[1]
new_deaths <- values[2]
total_recovored <- values[3]
rw$Day <- format(Sys.Date(),"%m/%d/%Y")
rw$New.Cases <- new_cases
rw$Total.Cases <- as.numeric(rw$Total.Cases)+new_cases
rw$New.Deaths <- new_deaths
rw$Total.Deaths <- rw$Total.Deaths + new_deaths
rw$New.Recovered <- total_recovored - rw$Total.Recovered
rw$Total.Recovered <- total_recovored
rw$New.Deaths...60 <- new_deaths
rw
prev_rw
df <- read.csv("eg_covid.csv")
rw <- df[nrow(df),]
rw
values
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
new_cases == rw$New.Cases & new_deaths==rw$New.Deaths & total_recovered == rw$New.Recovered
source('D:/work/git corona/run_file.R')
new_cases
values
get_values()
source('Scraper.R')
get_values()
cat("Scraping...2")
source('Scraper.R')
values <- get_values()
source('D:/work/git corona/run_file.R')
new_cases == rw$New.Cases
new_deaths==rw$New.Deaths
total_recovered == rw$New.Recovered
total_recovered
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
cat("Scraping...2")
source('Scraper.R')
values <- get_values()
df <- read.csv("eg_covid.csv")
rw <- df[nrow(df),]
new_cases <- values[1]
new_deaths <- values[2]
total_recovered <- values[3]
new_cases == rw$New.Cases & new_deaths==rw$New.Deaths & total_recovered == rw$Total.Recovered
if(new_cases == rw$New.Cases & new_deaths==rw$New.Deaths & total_recovered == rw$Total.Recovered){
stop("Nothing new")
}else{
rw$Day <- format(Sys.Date(),"%m/%d/%Y")
rw$New.Cases <- new_cases
rw$Total.Cases <- as.numeric(rw$Total.Cases)+new_cases
rw$New.Deaths <- new_deaths
rw$Total.Deaths <- rw$Total.Deaths + new_deaths
rw$New.Recovered <- total_recovered - rw$Total.Recovered
rw$Total.Recovered <- total_recovered
rw$New.Deaths...60 <- new_deaths
df <- rbind(df , rw)
write.csv(df,"eg_covid.csv",row.names = F)
}
args = commandArgs(trailingOnly=TRUE)
len(args)
length(args)
length(args)==0
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
cat(Sys.Date())
cat(Sys.Date())
Sys.Date()
cat(Sys.Date())
print(Sys.Date())
Sys.time()
cat(format(Sys.time())
)
cat(Sys.time())
cat(format(Sys.time()))
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
View(hk)
View(df)
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
View(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
hk <- highlight_key(df)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900"))
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD"))
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(2, 'desc')))%>%
formatStyle('New.Cases', backgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('#a6cee3', '#1f78b4')))
chart1
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
View(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
hk <- highlight_key(df)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")
View(df)
SharedData$new(df, ~Total.Cases)
hk
hk <- SharedData$new(df, ~Total.Cases)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
hk <- SharedData$new(df, ~Total.Cases)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
hk <- highlight_key(df, ~Total.Cases)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")
hk$data()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
factor(df$Day, levels = df$Day)
df$Day <- factor(df$Day, levels = df$Day)
hk <- highlight_key(df, ~Total.Cases)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
df$Day <- factor(df$Day, levels = df$Day)
hk <- highlight_key(df, ~Total.Cases)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900"))
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD"))
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(2, 'desc')))%>%
formatStyle('New.Cases', backgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('#a6cee3', '#1f78b4')))%>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
help(highlight)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
df$Day <- factor(df$Day, levels = df$Day)
hk <- highlight_key(df, ~Total.Cases)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900")) %>%
highlight(off = "plotly_relayout")
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD")) %>%
highlight(off = "plotly_relayout")
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))%>%
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
