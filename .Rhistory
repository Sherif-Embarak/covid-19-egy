df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df <- df[,1:8]
library(crosstalk)
hk <- highlight_key(df)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
theme(legend.position="none")) %>%
highlight() %>%
layout(showlegend = FALSE)
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
theme(legend.position="none")) %>%
highlight() %>%
layout(showlegend = FALSE)
-ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases)) +
geom_line()+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases)) +
geom_line()+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1)) +
geom_line()+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1)) +
geom_line()+scale_color_brewer(palette="Paired")+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1)) +
geom_line()+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1, fill=Curfew)) +
geom_line()+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1)) +
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1)+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point())
ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Paired")
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Paired"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Dark2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=Curfew))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Dark2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=supp))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Dark2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=Total.Cases))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Dark2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, fill=Total.Cases))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Dark2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=2))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Dark2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point()+scale_color_brewer(palette="Dark2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(aes(color=Total.Cases))+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(aes(color=Total.Cases)))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=Total.Cases))+
geom_line(aes(color=Total.Cases))+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(aes(color=Total.Cases)))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(aes(color=Total.Cases))+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line()+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#69b3a2")+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point())
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#69b3a2")+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#69b3a2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#69b3a2", size=2)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#69b3a2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#69b3a2", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#69b3a2"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#69b3a2", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900"))
ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(stat = "identity")+scale_color_brewer(palette="Dark2")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
theme(legend.position="none")) %>%
highlight() %>%
layout(showlegend = FALSE)
df$Curfew
as.character(df$Curfew)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, group=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
hk <- highlight_key(df)
df$Curfew <- as.character(df$Curfew)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
library(crosstalk)
hk <- highlight_key(df)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900"))
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD"))
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))
ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, group=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, group=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(stat = "identity")+theme_minimal()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight() %>%
layout(showlegend = FALSE)
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(stat = "identity")+scale_fill_brewer(palette="Blues")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(stat = "identity")+scale_fill_brewer(palette="Paired")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight()
valueBox(42, caption = "Errors", icon="fa-thumbs-down")
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))
ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD"))
knit_with_parameters('D:/work/corona/Corona.Rmd')
unlink('D:/work/corona/Corona_cache', recursive = TRUE)
setwd("D:/work/corona/")
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
df$New.Cases[length(df$New.Cases)]
df$Total.Cases[length(df$New.Cases)]
df$Total.Cases[nrow(df)]
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
closed <- total_deaths+total_recovered
active <- total_cases - closed
closed
active
params$data
"\n"
print("\n")
cat("\n")
total_deaths
total_deaths/closed
round((total_deaths/closed)*100,2)
round((total_deaths/closed)*100,1)
round((total_recovered/closed)*100,1)
paste("Deaths/Discharged :",   total_deaths, round((total_deaths/closed)*100,1),"%")
r paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"%)")
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"%)")
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"% )","            ",paste("Recovered/Discharged :",   total_recovered, "(", round((total_recovered/closed)*100,1),"% )")
)
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"% )","            ",paste("Recovered/Discharged :",   total_recovered, "(", round((total_recovered/closed)*100,1),"% )"))
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
cat("\n </br>",paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"% ),","               ",paste("Recovered/Discharged :",   total_recovered, "(", round((total_recovered/closed)*100,1),"% )")))
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"% ),","               ",paste("Recovered/Discharged :",   total_recovered, "(", round((total_recovered/closed)*100,1),"% )"))
r paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"% ))
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"% ))
)
)
`r "</br>"`
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"% )
)
`r "</br>"`
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"%" )
paste("Deaths/Discharged :",   total_deaths, "(", round((total_deaths/closed)*100,1),"%)" )
paste("Recovered/Discharged :",   total_recovered, "(", round((total_recovered/closed)*100,1),"% )")
paste("Recovered/Discharged :",   total_recovered, "(", round((total_recovered/closed)*100,1),"% )"))
paste("Recovered/Discharged :",   total_recovered, "(", round((total_recovered/closed)*100,1),"% )")
"</br>" paste0("Deaths/Discharged : ",   total_deaths, " (", round((total_deaths/closed)*100,1),"%)" )
"</br>"
source('D:/work/git corona/run_file.R')
format(Sys.time(), '%d %B, %Y')
format(Sys.time(), '%d %B, %Y  %h:%M:%s')
Sys.time()
source('D:/work/git corona/run_file.R')
DT::datatable(hk,options = list(pageLength = 50))
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'))
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  'yellow'
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#ff9900'
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleInterval()
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleInterval(New.Cases)
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleColorBar(range(df), 'lightblue')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(names(df),
background = styleColorBar(range(df), 'lightblue'),
backgroundSize = '98% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
DT::datatable(hk,options = list(pageLength = 50)) %>% formatStyle(names(hk),
background = styleColorBar(range(hk), 'lightblue'),
backgroundSize = '98% 88%',
backgroundRepeat = 'no-repeat',
backgroundPosition = 'center')
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#ff9900'
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleColorBar(range(df), 'lightblue')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleColorBar(range(hk), 'lightblue')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleColorBar(10, 'lightblue')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleColorBar(1:10, 'lightblue')
)
1:10
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  styleInterval(1:10, 'lightblue')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases','New.Deaths'
backgroundColor =  '#FFEEAA'
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases','New.Deaths',
backgroundColor =  '#FFEEAA'
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases','New.Deaths',
backgroundColor =  c('#FFEEAA')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases','New.Deaths',
backgroundColor =  c('#FFEEAA' , 'gray')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases','New.Deaths',
backgroundColor =  c('#FFEEAA' , 'gray')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
c('New.Cases','New.Deaths'),
backgroundColor =  c('#FFEEAA' , 'gray')
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  '#FFEEAA'
)
DT::datatable(hk,options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe',options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA',fontSize = '50%'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA',fontSize = '150%'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA',fontSize = '120%'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe', rownames = FALSE , options = list(pageLength = 50 , fontSize = '120%'))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA',fontWeight = styleInterval(5, c('normal', 'bold')))
) %>% formatStyle(
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA',fontWeight = styleInterval(5, c('normal', 'bold')))
) %>% formatStyle(
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA',fontWeight = styleInterval(5, c('normal', 'bold'))
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA',fontWeight = 'bold'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50),fontWeight = 'bold')%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)%>%formatStyle(names(df),fontWeight = 'bold')
source('D:/work/git corona/run_file.R')
datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(1, 'desc')))
datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)%>%formatStyle(names(df),fontWeight = 'bold')
source('D:/work/git corona/run_file.R')
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%formatStyle(
'New.Cases',
backgroundColor =  '#FFEEAA'
) %>% formatStyle(
'New.Deaths',
backgroundColor =  'red'
)%>%formatStyle(names(df),fontWeight = 'bold')%>%formatStyle(1, color = "red", backgroundColor = "orange", target = "row")
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases',ackgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = "orange", target = "row")
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases',ackgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow')), target = "row")
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases',ackgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow')))
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases',ackgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow')))
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases',ackgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases',ackgroundColor =  '#FFEEAA')
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases', backgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow')))
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(0, 'desc')))%>%
formatStyle('New.Cases', backgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('#a6cee3', '#1f78b4')))
source('D:/work/git corona/run_file.R')
