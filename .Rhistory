filter(prog_data , MRN..Organization==d[i])
for( i  in unique(d)){
res <- rbind(res , filter(prog_data , MRN..Organization==i)[1] )
}
filter(prog_data , MRN..Organization==i)
filter(prog_data , MRN..Organization==i)[1]
filter(prog_data , MRN..Organization==i)[,1]
filter(prog_data , MRN..Organization==i)[1,]
for( i  in unique(d)){
res <- rbind(res , filter(prog_data , MRN..Organization==i)[1,] )
}
prog_data <- read.csv("D:/redcap/Copy of Cisplatin_+_Cystatin from March to June 2018.csv")
d <- unique(prog_data$MRN..Organization[duplicated(prog_data$MRN..Organization)])
res <- filter(prog_data , !(MRN..Organization %in% d))
for( i  in unique(d)){
res <- rbind(res , filter(prog_data , MRN..Organization==i)[1,] )
}
d
View(res)
View(prog_data)
write.csv(res,"D:/redcap/res.csv")
read.csv("C:\Users\sheri\OneDrive\Documents\R\test.csv")
read.csv("C:/Users/sheri/OneDrive/Documents/R/test.csv")
df <- read.csv("C:/Users/sheri/OneDrive/Documents/R/test.csv")
install.packages("tidyr")
library("tidyr", lib.loc="~/R/win-library/3.5")
View(df)
spread(df , cutstomer_id , account_id)
spread(df , customer_id , account_id)
spread(df , unique(customer_id) , account_id)
spread(df , unique(df$customer_id) , account_id)
?group_by
??group_by
library("dplyr", lib.loc="~/R/win-library/3.5")
?group_by
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number()) %>%
spread(customer_id, account_id)
)
View(df)
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number()) %>%
spread(customer_id, account_id) )
unique(df$customer_id)
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = unique(df$customer_id)) %>%
spread(customer_id, account_id) )
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = unique(customer_id)) %>%
spread(customer_id, account_id) )
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number()) %>%
spread(customer_id, account_id) )
as.data.frame (df %>%
group_by(account_id) %>%
mutate(id = row_number()) %>%
spread(customer_id, account_id) )
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number()) %>%
spread(customer_id, account_id) )
dff <- as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number()) %>%
spread(customer_id, account_id) )
dff
View(df)
View(dff)
dff.T
t(dff)
group_by(df , account_id)
group_by(df , customer_id)
as.data.frame (df %>%
group_by(customer_id)
)
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number())
)
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number()) %>%
spread(id, account_id) )
dff <- as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number()) %>%
spread(id, account_id) )
View(dff)
View(df)
View(dff)
df
df <- as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = row_number())
)
df
as.data.frame (df %>%
group_by(customer_id) %>%
mutate(id = paste0("acc_num_",row_number())) %>%
spread(id, account_id) )
mutate(df ,id = paste0("acc_num_",row_number()))
mutate(group_by(df ,customer_id) ,id = paste0("acc_num_",row_number()))
group_by(df ,customer_id)
install.packages("d3treeR")
install.packages("installr"); library(installr) # install+load installr
updateR()
library(installr)
updateR()
info()
sessionInfo()
install.packages("shiny")
install.packages("plotly")
shiny::runApp('D:/work/corona/Egy_corona')
runApp('D:/work/corona/Egy_corona')
library(dplyr)
library(plyr)
library(tidyr)
library(DT)
library(DT)
library(knitr)
library(kableExtra)
library(ggplot2)
install.packages("knitr")
install.packages("DT")
install.packages("flexdashboard")
install.packages("forcats")
install.packages("lubridate")
library(dplyr)
library(plyr)
library(tidyr)
library(DT)
library(knitr)
library(kableExtra)
install.packages("kableExtra")
library(dplyr)
library(plyr)
library(tidyr)
library(DT)
library(knitr)
library(kableExtra)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(forcats)
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
library(ggplot2)
library(plotly)
library(flexdashboard)
?datatable
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
ggplot(df$New.Cases)
ggplot(df$New.Cases)
View(df)
View(df)
View(df)
ggplot(df, aes(x=Day, y=New.Cases)) +
geom_bar(stat = "identity")
plotly(ggplot(df, aes(x=Day, y=New.Cases)) +
geom_bar(stat = "identity"))
ggplot(ggplot(df, aes(x=Day, y=New.Cases)) +
geom_bar(stat = "identity"))
ggplot(df, aes(x=Day, y=New.Cases)) +
geom_bar(stat = "identity"))
month(df$Day)
?dmy
mdy(df$Day)
month(mdy(df$Day))
month.name(mdy(df$Day))
months.Date(mdy(df$Day))
paste(day(mdy(df$Day)) , months.Date(mdy(df$Day)) )
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
datatable(df,rownames = FALSE)
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplotly(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
datatable(df,rownames = FALSE)
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
plot(pressure)
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)))
?ggplotly
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
datatable(df,rownames = FALSE)
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
?dmy
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(lubridate)
datatable(df,rownames = FALSE)
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
View(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(lubridate)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
g
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
print(g)
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
print(g)
f <- function(df) {
gg <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
list( result=df, plot=plotly::ggplotly(gg) )
}
res <- f(df)
res$plot
f <- function(df) {
gg <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
list( result=df, plot=plotly::ggplotly(gg) )
}
res <- f(df)
res$plot
f1 <- function(df) {
gg <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
assign("ggp", plotly::ggplotly(gg), envir=parent.frame())
df    # NOT returning a plot
}
res1 <- f1(df)
ggp
f1 <- function(df) {
gg <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
assign("ggp", plotly::ggplotly(gg), envir=parent.frame())
df    # NOT returning a plot
}
res1 <- f1(df)
ggp
py <- plotly(username="r_user_guide", key="mw5isa4yqp")
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
py$ggplotly(bar)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(lubridate)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
datatable(df,rownames = FALSE)
py <- plotly(username="r_user_guide", key="mw5isa4yqp")
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
py$ggplotly(bar)
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
bar
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplotly(bar)
ggplotly(bar)
sessionInfo()
library(plotly)
mh <- data.frame(
rank = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
43, 44, 45, 46, 47, 48, 49, 50, 51),
state = c("CT", "MA", "VT", "SD", "MN", "NJ", "IA", "ND", "PA", "ME",
"DE", "NY", "AK", "MD", "IL", "HI", "MI", "DC",
"KY", "NH", "KS", "NM", "CA", "OK", "CO", "OH",
"NE", "FL", "WY", "WA", "MO", "TX", "NC", "GA",
"WI", "RI", "SC", "VA", "MT", "UT", "TN", "LA",
"WV", "MS", "IN", "AL", "AR", "ID", "OR", "AZ",
"NV")
)
plot_ly(
type = "choropleth",
locations = mh$state,
locationmode = "USA-states",
z = mh$rank
) %>%
layout(geo = list(scope = "usa"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
plot_ly(bar)
plot_ly(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
plot_ly(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
g <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
print(ggplotly(g))
plot_ly()
plot_ly(x = 1:10, y = 1:10)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, text = ~paste("Clarity: ", clarity),
mode = "markers", color = ~carat, size = ~carat, marker = list(line = list(color = "black")))
plot_ly()
plot_ly(x = 1:10, y = 1:10)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, text = ~paste("Clarity: ", clarity),
mode = "markers", color = ~carat, size = ~carat, marker = list(line = list(color = "black")))
plot_ly(d, x = ~carat, y = ~price, text = ~paste("Clarity: ", clarity),
mode = "markers", color = ~carat, size = ~carat, marker = list(line = list(color = "black")))
lot_ly(x = 1:10, y = 1:10)
plot_ly(x = 1:10, y = 1:10)
library(plotly)
packageVersion('plotly')
#[1] ‘4.6.0’
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
update.packages("plotly")
library("plotly", lib.loc="~/R/win-library/3.6")
library(plotly)
packageVersion('plotly')
#[1] ‘4.6.0’
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
library(plotly)
packageVersion('plotly')
#[1] ‘4.6.0’
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
g <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
print(ggplotly(g))
?ggplotly()
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggplotly(ggiris)
ggiris
library(rlang)
install.packages("ANTsR")
source('~/.active-rstudio-document', echo=TRUE)
library(installr)
install.packages("installr")
library(installr)
updateR()
library(installr)
updateR()
q()
install.packages("ANTsR")
source('D:/work/git corona/run_file.R', echo=TRUE)
