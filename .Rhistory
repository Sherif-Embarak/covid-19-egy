theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)))
?ggplotly
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
datatable(df,rownames = FALSE)
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
?dmy
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(lubridate)
datatable(df,rownames = FALSE)
ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
View(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(lubridate)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
g
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
print(g)
g <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
print(g)
f <- function(df) {
gg <- ggplotly(ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1)))
list( result=df, plot=plotly::ggplotly(gg) )
}
res <- f(df)
res$plot
f <- function(df) {
gg <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
list( result=df, plot=plotly::ggplotly(gg) )
}
res <- f(df)
res$plot
f1 <- function(df) {
gg <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
assign("ggp", plotly::ggplotly(gg), envir=parent.frame())
df    # NOT returning a plot
}
res1 <- f1(df)
ggp
f1 <- function(df) {
gg <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
assign("ggp", plotly::ggplotly(gg), envir=parent.frame())
df    # NOT returning a plot
}
res1 <- f1(df)
ggp
py <- plotly(username="r_user_guide", key="mw5isa4yqp")
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
py$ggplotly(bar)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(lubridate)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
datatable(df,rownames = FALSE)
py <- plotly(username="r_user_guide", key="mw5isa4yqp")
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
py$ggplotly(bar)
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
bar
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
ggplotly(bar)
ggplotly(bar)
sessionInfo()
library(plotly)
mh <- data.frame(
rank = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
43, 44, 45, 46, 47, 48, 49, 50, 51),
state = c("CT", "MA", "VT", "SD", "MN", "NJ", "IA", "ND", "PA", "ME",
"DE", "NY", "AK", "MD", "IL", "HI", "MI", "DC",
"KY", "NH", "KS", "NM", "CA", "OK", "CO", "OH",
"NE", "FL", "WY", "WA", "MO", "TX", "NC", "GA",
"WI", "RI", "SC", "VA", "MT", "UT", "TN", "LA",
"WV", "MS", "IN", "AL", "AR", "ID", "OR", "AZ",
"NV")
)
plot_ly(
type = "choropleth",
locations = mh$state,
locationmode = "USA-states",
z = mh$rank
) %>%
layout(geo = list(scope = "usa"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
setwd("D:/work/corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$month_day <- paste(day(df$Day) , months.Date(df$Day) )
bar <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
plot_ly(bar)
plot_ly(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
plot_ly(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
g <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
print(ggplotly(g))
plot_ly()
plot_ly(x = 1:10, y = 1:10)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, text = ~paste("Clarity: ", clarity),
mode = "markers", color = ~carat, size = ~carat, marker = list(line = list(color = "black")))
plot_ly()
plot_ly(x = 1:10, y = 1:10)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, text = ~paste("Clarity: ", clarity),
mode = "markers", color = ~carat, size = ~carat, marker = list(line = list(color = "black")))
plot_ly(d, x = ~carat, y = ~price, text = ~paste("Clarity: ", clarity),
mode = "markers", color = ~carat, size = ~carat, marker = list(line = list(color = "black")))
lot_ly(x = 1:10, y = 1:10)
plot_ly(x = 1:10, y = 1:10)
library(plotly)
packageVersion('plotly')
#[1] ‘4.6.0’
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
update.packages("plotly")
library("plotly", lib.loc="~/R/win-library/3.6")
library(plotly)
packageVersion('plotly')
#[1] ‘4.6.0’
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
library(plotly)
packageVersion('plotly')
#[1] ‘4.6.0’
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
g <- ggplot(df, aes(x=month_day, y=New.Cases)) +
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 70, hjust = 1))
print(ggplotly(g))
?ggplotly()
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggplotly(ggiris)
ggiris
source('D:/work/git corona/run_file.R')
rvest
?rvest
??rvest
??rsDriver
install.packages("RSelenium")
library(RSelenium)
rD <- rsDriver(browser = "phantomjs", verbose = FALSE)
rD <- rsDriver(browser = "firefox", verbose = FALSE)
)
**
rD <- rsDriver()
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
df$Day <- factor(df$Day, levels = df$Day)
hk <- highlight_key(df, ~Total.Cases)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900")) %>%
highlight(off = "plotly_relayout")
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD")) %>%
highlight(off = "plotly_relayout")
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))%>%
highlight(off = "plotly_relayout")
View(df)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
df$Day <- factor(df$Day, levels = df$Day)
hk <- highlight_key(df, ~Total.Cases)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900")) %>%
highlight(off = "plotly_relayout")
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD")) %>%
highlight(off = "plotly_relayout")
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))%>%
highlight(off = "plotly_relayout")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
df$Day <- factor(df$Day, levels = df$Day)
hk <- highlight_key(df, ~Total.Cases)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900")) %>%
highlight(off = "plotly_relayout")
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD")) %>%
highlight(off = "plotly_relayout")
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF"))%>%
highlight(off = "plotly_relayout")
valueBox(total_cases, icon = "fa-area-chart")
valueBox(total_deaths, icon = "fa-area-chart" , color="warning")
valueBox(total_recovered, icon = "fa-area-chart" , color = "#00DDDD")
valueBox(paste("Closed Cases: ",closed))
DT::datatable(hk,class = 'cell-border stripe hover compact', rownames = FALSE , options = list(pageLength = 50,order = list(2, 'desc')))%>%
formatStyle('New.Cases', backgroundColor =  '#FFEEAA') %>%
formatStyle('New.Deaths',backgroundColor =  'red')%>%
formatStyle(names(df),fontWeight = 'bold')%>%
formatStyle('Curfew',  backgroundColor = styleEqual(c(0, 1), c('#a6cee3', '#1f78b4')))%>%
highlight()
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
source('D:/work/git corona/run_file.R')
rmarkdown::render(input = "Corona.Rmd", output_file = "test.html")
rmarkdown::render(input = "Corona.Rmd", output_file = "index.html")
source('D:/work/git corona/run_file.R')
choose(df$Day,10)
?choose
?select
seq(1 , nrow(df) , length.out = 10)
as.integer(seq(1 , nrow(df) , length.out = 10))
df$Day[as.integer(seq(1 , nrow(df) , length.out = 10))]
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
library(ggplot2)
library(plotly)
library(flexdashboard)
library(DT)
library(plotly)
library(knitr)
library(lubridate)
library(crosstalk)
setwd("D:/work/git corona/")
df <- read.csv("eg_covid.csv")
df$Day <- mdy(df$Day)
df$Day <- paste(day(df$Day) , months.Date(df$Day) )
df$Curfew <- as.character(df$Curfew)
df <- df[,1:8]
total_cases <- df$Total.Cases[nrow(df)]
total_deaths <- df$Total.Deaths[nrow(df)]
total_recovered <- df$Total.Recovered[nrow(df)]
closed <- total_deaths+total_recovered
active <- total_cases - closed
library(crosstalk)
df$Day <- factor(df$Day, levels = df$Day)
xlabel <- df$Day[as.integer(seq(1 , nrow(df) , length.out = 10))]
hk <- highlight_key(df, ~Total.Cases)
chart1 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Cases, fill=Curfew)) + scale_x_discrete(breaks = xlabel)+
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart2 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Deaths, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart3 <-ggplotly(ggplot(hk, aes(x=Day, y=New.Recovered, fill=Curfew)) +
geom_bar(width = 0.3, stat = "identity")+scale_fill_manual(values = c("#6698FF", "#153E7E"))+
theme(axis.text.x = element_text(angle = 70, hjust = 1))) %>%
highlight(off = "plotly_relayout")
chart4 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Cases, group=1))+
geom_line(color="#33CCFF", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#33CCFF")) %>%
highlight(off = "plotly_relayout")
chart5 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Deaths, group=1))+
geom_line(color="#FF9900", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#FF9900")) %>%
highlight(off = "plotly_relayout")
chart6 <- ggplotly(ggplot(data=hk, aes(x=Day, y=Total.Recovered, group=1))+
geom_line(color="#00DDDD", size=1)+theme(axis.text.x = element_text(angle = 70, hjust = 1))+
geom_point(color="#00DDDD"))%>%
highlight(off = "plotly_relayout")
chart1
source('D:/work/git corona/run_file.R')
?highlight
